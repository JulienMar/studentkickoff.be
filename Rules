#!/usr/bin/env ruby

preprocess do
  jaren.each do |item|
    jaar = item.identifier.without_ext.split('/').last.to_i
    item[:jaar] = jaar
  end

  artists.each do |artist|
    stage = artist.identifier.to_s.split('/')[-2]

    artist[:start] = DateTime.parse(artist[:start])
    artist[:end]   = DateTime.parse(artist[:end])
    artist[:title] = artist[:name]
    artist[:stage] = stage
  end
end

compile '/**/*.erb' do
  layout '/default.*'
  filter :erb
end

compile '/historiek/*.md' do
  filter :kramdown
end

compile '/meetthecrew/*.md' do
  filter :kramdown
  layout '/teampagina.*'
  layout '/default.*'
  filter :erb

  ident = item.identifier.without_ext.split('/').last
  write "/meetthecrew/#{ident}/index.html"
end

compile '/faq.md' do
  filter :kramdown
  layout '/faq.*'
  layout '/default.*'
  filter :erb
end

compile '/partners.erb' do
  filter :kramdown
  layout '/default.*'
  filter :erb
end

compile '/artists/*/*.md' do
  filter :kramdown
  layout '/artist_page.*'
  layout '/default.*'
  filter :erb
end

compile '/artists/*/*.md', rep: :json do
  filter :kramdown
  filter :strip_html
  filter :json, item.attributes.merge(
    image: "http://studentkickoff.be/assets/images/artists/#{item[:image]}"
  )
end

ignore '/studentvillage/*.md'
compile '/studentvillage/*.md', rep: :json do
  filter :kramdown
  filter :strip_html

  attrs = item.attributes
  attrs[:logo] = nil unless attrs[:logo]
  attrs[:logo] = "http://studentkickoff.be/assets/images/studentvillage/#{attrs[:logo]}" if attrs[:logo]

  filter :json, attrs
end

compile '/**/*.json' do
  filter :erb
  write item.identifier.to_s
end

compile '/assets/images/gallery/*.{jpg,png}', rep: :thumbnail do
  filter :resize
  write "#{item.identifier.without_ext}_thumbnail.jpg"
end

# Empty route block prevents item from being written out
route '/historiek/*.md' do; end

route '/artists/*/*.md' do
  split_path = @item.identifier.without_ext.split('/')
  split_path.delete_at(-2)

  "#{split_path.join('/')}/index.html"
end

route '/**/*.{erb,html,md}' do
  if item.identifier =~ '/index.*'
    '/index.html'
  else
    "#{item.identifier.without_ext}/index.html"
  end
end

ignore '/assets/stylesheets/includes/**/*'
compile '/**/*.scss' do
  filter :sass, syntax: :scss
  filter :autoprefixer
  write "#{item.identifier.without_ext}.css"
end

compile '/**/*.coffee' do
  filter :coffeescript
  write "#{item.identifier.without_ext}.js"
end

compile '/**/*' do
  write item.identifier.to_s
end

layout '/**/*', :erb
